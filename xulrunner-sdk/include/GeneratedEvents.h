#ifndef _gen_mozilla_idl_generated_events_h_
#define _gen_mozilla_idl_generated_events_h_

/* THIS FILE IS AUTOGENERATED - DO NOT EDIT */
#include "nscore.h"
class nsEvent;
class nsIDOMEvent;
class nsPresContext;
namespace mozilla {
namespace dom {
class EventTarget;
}
}

nsresult
NS_NewDOMProgressEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStorageEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceProximityEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozSettingsEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMUserProximityEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMCustomEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMPageTransitionEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDOMTransactionEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMPopStateEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMHashChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMCloseEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozContactChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceOrientationEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceLightEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozApplicationEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSmartCardEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStyleRuleChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStyleSheetChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStyleSheetApplicableStateChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMElementReplaceEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozSmsEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozMmsEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSpeechSynthesisEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceStorageChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMPopupBlockedEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMBlobEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMRecordErrorEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMGamepadEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMGamepadButtonEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMGamepadAxisMoveEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSpeechRecognitionEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);

#endif
